-- 유진 sql


-- 문서분류 테이블 수정을 위한 DROP+CREATE 


DROP TABLE "DOC_CATEGORY" CASCADE CONSTRAINTS;

CREATE TABLE "DOC_CATEGORY" ( 
  "DOC_CATEGORY_NO"	NUMBER		NOT NULL,
  "DOC_HTML_NAME"	NVARCHAR2(50)		NULL,
  "DOC_CATEGORY_GROUP"	NVARCHAR2(10)		NOT NULL,
  "DOC_CATEGORY_SORT"	NVARCHAR2(10)		NOT NULL
);

COMMENT ON COLUMN "DOC_CATEGORY"."DOC_CATEGORY_NO" IS '0: 복무-휴가, 1: 인사-퇴직, 2: 업무-출점, 3: 업무-폐점, 4: 업무-지출, 5: 업무-발주';

COMMENT ON COLUMN "DOC_CATEGORY"."DOC_CATEGORY_GROUP" IS '복무/인사/업무';

COMMENT ON COLUMN "DOC_CATEGORY"."DOC_CATEGORY_SORT" IS '휴가/퇴직/출점/폐점/지출/발주';

ALTER TABLE "DOC_CATEGORY" ADD CONSTRAINT "PK_DOC_CATEGORY" PRIMARY KEY (
  "DOC_CATEGORY_NO"
);

ALTER TABLE "APPROVAL" ADD CONSTRAINT "FK_DOC_CATEGORY_TO_APPROVAL_1" FOREIGN KEY (
  "DOC_CATEGORY_NO"
)
REFERENCES "DOC_CATEGORY" (
  "DOC_CATEGORY_NO"
);



-- 템플릿 제목 컬럼 추가
ALTER TABLE "APPROVAL" ADD "APPROVAL_DOC_TITLE" NVARCHAR2(50) NOT NULL;
COMMENT ON COLUMN "APPROVAL"."APPROVAL_DOC_TITLE" IS '전자결재 내부 문서 제목';
COMMIT;


-- 전자결재 관련 시퀀스 생성 ==================================================================

-- 전자결재 APPROVAL_NO SEQ 생성
DROP SEQUENCE SEQ_APPROVAL_NO;
CREATE SEQUENCE SEQ_APPROVAL_NO NOCACHE;

-- 결재문서 첨부파일 파일번호 APPROVAL_FILE_NO_SEQ 생성
CREATE SEQUENCE SEQ_APPROVAL_FILE_NO NOCACHE;

-- 결재자 리스트 APPROVER_NO_SEQ 생성
DROP SEQUENCE SEQ_APPROVER_NO;
CREATE SEQUENCE SEQ_APPROVER_NO NOCACHE;

-- 발주 번호 시퀀스 생성 예정..
--CREATE SEQUENCE SEQ_DOC_ORDER_NO NOCACHE;

COMMIT;

-- 발주 주문서  SEQ_DOC_ORDER_NO
DROP SEQUENCE SEQ_DOC_ORDER_NO;
CREATE SEQUENCE SEQ_DOC_ORDER_NO NOCACHE;


-- 문서분류 데이터 생성 ==================================================================

SELECT * FROM "DOC_CATEGORY";

INSERT INTO "DOC_CATEGORY" VALUES(0, NULL, '복무', '휴가');
INSERT INTO "DOC_CATEGORY" VALUES(1, NULL, '인사', '퇴직');
INSERT INTO "DOC_CATEGORY" VALUES(2, NULL, '업무', '출점');
INSERT INTO "DOC_CATEGORY" VALUES(3, NULL, '업무', '폐점');
INSERT INTO "DOC_CATEGORY" VALUES(4, NULL, '업무', '지출');
INSERT INTO "DOC_CATEGORY" VALUES(5, NULL, '업무', '발주');
INSERT INTO "DOC_CATEGORY" VALUES(6, NULL, '업무', '기타');

COMMIT;



-- 템플릿 info 조회 
SELECT MEMBER_NAME, TEAM_NAME
FROM "MEMBER"
JOIN "TEAM" USING(TEAM_NO)
WHERE MEMBER_NO = 9;

-- 로그인한 회원과 부서가 같은 회원 조회
SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME 
FROM "MEMBER"
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM "MEMBER" WHERE MEMBER_NO=9)
AND MEMBER_NO!=9;

-- 로그인한 회원과 팀이 같은 회원 조회
SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME 
FROM "MEMBER"
WHERE TEAM_NO = (SELECT TEAM_NO FROM "MEMBER" WHERE MEMBER_NO=9)
AND MEMBER_NO!=9;

-- 사장, 부사장
SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME
FROM "MEMBER"
WHERE TEAM_NO=0;

-- 부장
SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME
FROM "MEMBER"
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM "MEMBER" WHERE MEMBER_NO=9)
AND GRADE_NO=2
AND MEMBER_NO!=9;

-- 팀장
SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME
FROM "MEMBER"
WHERE TEAM_NO = (SELECT TEAM_NO FROM "MEMBER" WHERE MEMBER_NO=9)
AND GRADE_NO=3
AND MEMBER_NO!=9;

-- 회계팀장
SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME
FROM "MEMBER"
WHERE GRADE_NO =3 AND DEPARTMENT_NO =2 AND TEAM_NO = 6;

-- 
SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME
FROM "MEMBER"
WHERE TEAM_NO=0

UNION

SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME
FROM "MEMBER"
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM "MEMBER" WHERE MEMBER_NO=9)
AND GRADE_NO=2
AND MEMBER_NO!=9

UNION

SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME
FROM "MEMBER"
WHERE TEAM_NO = (SELECT TEAM_NO FROM "MEMBER" WHERE MEMBER_NO=9)
AND GRADE_NO=3
AND MEMBER_NO!=9;


-- 

SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME, DEPARTMENT_NO 
FROM "MEMBER"
WHERE TEAM_NO=0
OR (DEPARTMENT_NO =(SELECT DEPARTMENT_NO FROM "MEMBER" WHERE MEMBER_NO=9) AND GRADE_NO=2)
OR (TEAM_NO = (SELECT TEAM_NO FROM "MEMBER" WHERE MEMBER_NO=9) AND GRADE_NO=3)
OR (GRADE_NO =3 AND DEPARTMENT_NO =2 AND TEAM_NO = 6)
AND MEMBER_NO!=9
ORDER BY GRADE_NO DESC;

-- 중복 팀원 삭제
DELETE FROM "MEMBER"
WHERE MEMBER_NO= 39;

COMMIT;

/* SEQ_APPROVER_NO 시퀀스 번호를 하나 생성해서 반환하는 함수 생성*/
-- NEXT_APPROVER_NO() 함수 생성
CREATE OR REPLACE FUNCTION NEXT_APPROVER_NO
RETURN NUMBER 
IS NUM NUMBER;
BEGIN 
   SELECT SEQ_APPROVER_NO.NEXTVAL 
   INTO NUM
   FROM DUAL;
   RETURN NUM;
END;

COMMIT;

-- 결재요청함 (결재중)인 문서 조회
SELECT APPROVAL_NO, DOC_CATEGORY_GROUP , DOC_CATEGORY_SORT, APPROVAL_TITLE, MEMBER_NAME, APPROVAL_DATE
FROM APPROVAL
JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
JOIN MEMBER USING(MEMBER_NO)
WHERE MEMBER_NO = 9
AND APPROVAL_CONDITION =0;


-- APPROVAL 정리
DELETE FROM APPROVAL;

-- APPROVER 정리
DELETE FROM APPROVER;

-- DOC_HOLIDAY 정리
DELETE FROM DOC_HOLIDAY;

-- DOC_RETIREMENT 정리
DELETE FROM DOC_RETIREMENT;

COMMIT;

-- 출점/폐점 결재문서 테이블 수정해서 다시 CREATE 
DROP TABLE "DOC_STORE";

CREATE TABLE "DOC_STORE" (
	"APPROVAL_NO"	NUMBER		NOT NULL,
	"DOC_STORE_STATE"	NUMBER		NOT NULL,
	"STORE_NAME"	NVARCHAR2(50)		NOT NULL
);

COMMENT ON COLUMN "DOC_STORE"."APPROVAL_NO" IS '기안된 전자결재 문서 번호';

COMMENT ON COLUMN "DOC_STORE"."DOC_STORE_STATE" IS '0: 출점 / 1:폐점';

COMMENT ON COLUMN "DOC_STORE"."STORE_NAME" IS '점포 이름';

ALTER TABLE "DOC_STORE" ADD CONSTRAINT "PK_DOC_STORE" PRIMARY KEY (
	"APPROVAL_NO"
);

ALTER TABLE "DOC_STORE" ADD CONSTRAINT "FK_APPROVAL_TO_DOC_STORE_1" FOREIGN KEY (
	"APPROVAL_NO"
)
REFERENCES "APPROVAL" (
	"APPROVAL_NO"
);


--팀 테이블 부서코드 추가
ALTER TABLE "TEAM" ADD DEPARTMENT_NO NUMBER DEFAULT 0 NOT NULL;

ALTER TABLE "TEAM" ADD CONSTRAINT "FK_DEPARTMENT_TO_TEAM_1" FOREIGN KEY (
	"DEPARTMENT_NO"
)
REFERENCES "DEPARTMENT" (
	"DEPARTMENT_NO"
);

COMMIT;

UPDATE "TEAM"
SET DEPARTMENT_NO = 5
WHERE TEAM_NO =11;

SELECT TEAM_NAME FROM TEAM
JOIN DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME='경영관리부';

SELECT GRADE_NAME, MEMBER_NAME FROM "MEMBER"
JOIN TEAM USING(TEAM_NO)
JOIN GRADE USING(GRADE_NO)
WHERE TEAM_NAME='사원관리팀';



SELECT MEMBER_NAME, GRADE_NAME FROM "MEMBER"
JOIN "GRADE" USING(GRADE_NO)
WHERE DEPARTMENT_NO = 1
ORDER BY GRADE_NO;

SELECT MEMBER_NAME, GRADE_NAME, TEAM_NAME, TEAM_NO FROM "MEMBER"
JOIN "GRADE" USING(GRADE_NO)
LEFT JOIN "TEAM" USING(TEAM_NO)
WHERE MEMBER.DEPARTMENT_NO = 1
ORDER BY GRADE_NO;

SELECT MEMBER_NO, MEMBER_NAME, GRADE_NAME, TEAM_NAME, DEPARTMENT_NAME
FROM "MEMBER"
JOIN "GRADE" USING(GRADE_NO)
LEFT JOIN "TEAM" USING(TEAM_NO)
JOIN "DEPARTMENT" ON(MEMBER.DEPARTMENT_NO=DEPARTMENT.DEPARTMENT_NO)
WHERE MEMBER_NO = 55;



-- 파일 테이블 컬럼 추가
ALTER TABLE "APPROVAL_FILE" ADD APPROVAL_FILE_ORIGIN_NAME NVARCHAR2(300) NULL;
ALTER TABLE "APPROVAL_FILE" ADD APPROVAL_FILE_RENAME NVARCHAR2(300) NULL;

COMMENT ON COLUMN "APPROVAL_FILE"."APPROVAL_FILE_ORIGIN_NAME" IS '원본 파일 이름';

COMMENT ON COLUMN "APPROVAL_FILE"."APPROVAL_FILE_RENAME" IS '변경 파일 이름';

COMMIT;


SELECT *
FROM "APPROVAL"
JOIN "DOC_HOLIDAY" USING(APPROVAL_NO)
JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
WHERE APPROVAL_NO=1;

-- 임시 저장함 SELECT 
SELECT APPROVAL_TITLE, APPROVAL_DOC_TITLE, APPROVAL_CONTENT, DOC_CATEGORY_NO
FROM "APPROVAL"
WHERE APPROVAL_NO=89;

SELECT APPROVAL_TITLE, APPROVAL_DOC_TITLE, APPROVAL_CONTENT, DOC_CATEGORY_NO, 
	APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
FROM "APPROVAL"
LEFT JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
WHERE APPROVAL_NO=87;

SELECT TO_CHAR(DOC_HOLIDAY_START, 'YYYY-MM-DD') DOC_HOLIDAY_START, TO_CHAR(DOC_HOLIDAY_END, 'YYYY-MM-DD') DOC_HOLIDAY_END
FROM "DOC_HOLIDAY"
WHERE APPROVAL_NO=89;
	
DELETE FROM "APPROVAL"
WHERE APPROVAL_NO =49;

SELECT TO_CHAR(DOC_HOLIDAY_START, 'YYYY-MM-DD') DOC_HOLIDAY_START, TO_CHAR(DOC_HOLIDAY_END, 'YYYY-MM-DD') DOC_HOLIDAY_END
FROM "DOC_HOLIDAY"
WHERE APPROVAL_NO=92;

-- 임시저장함 결재자 리스트
SELECT AR.MEMBER_NO, MEMBER_NAME, 
		DEPARTMENT_NO, DEPARTMENT_NAME,
		TEAM_NO, TEAM_NAME, GRADE_NO, GRADE_NAME, APPROVER_ORDER
FROM "APPROVER" AR
JOIN "MEMBER" M USING(M.MEMBER_NO=AR.MEMBER_NO)
JOIN GRADE USINT(GRADE_NO)
JOIN TEAM USING(TEAM_NO)
JOIN DEPARTMENT D ON (M.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE APPROVAL_NO=86;

SELECT MEMBER_NO
FROM APPROVER
WHERE APPROVAL_NO=107;

SELECT AR.MEMBER_NO,
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AR.MEMBER_NO = M.MEMBER_NO) 
		MEMBER_NAME,
		(SELECT GRADE_NAME FROM MEMBER M JOIN GRADE USING(GRADE_NO)
		WHERE AR.MEMBER_NO = M.MEMBER_NO) GRADE_NAME,
		(SELECT TEAM_NAME FROM MEMBER M JOIN TEAM USING(TEAM_NO)
		WHERE AR.MEMBER_NO = M.MEMBER_NO) TEAM_NAME,
		(SELECT DEPARTMENT_NAME FROM MEMBER M JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO)
		WHERE AR.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME
FROM APPROVER AR
WHERE AR.APPROVAL_NO=107;


-- 결재요청함 조회
SELECT APPROVAL_NO, APPROVAL_TITLE, APPROVAL_DATE, MEMBER_NAME , DOC_CATEGORY_NO, DOC_CATEGORY_GROUP , DOC_CATEGORY_SORT, T.TEAM_NAME, D.DEPARTMENT_NAME,

(SELECT MEMBER_NAME
FROM (SELECT MEMBER_NAME
FROM APPROVER
JOIN MEMBER USING (MEMBER_NO)
WHERE APPROVAL_NO = A.APPROVAL_NO
ORDER BY APPROVER_ORDER DESC)
WHERE ROWNUM = 1) FINAL_APPROVER_NAME

FROM APPROVAL A
JOIN MEMBER M ON (M.MEMBER_NO = A.MEMBER_NO)
JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
LEFT JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
LEFT JOIN DEPARTMENT D ON (M.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE A.MEMBER_NO = 9
AND APPROVAL_CONDITION =0
ORDER BY APPROVAL_DATE DESC;





--
SELECT DOC_ORDER_NO, DOC_ORDER_DATE,
	DOC_ORDER_GOODS_NAME, DOC_ORDER_AMOUNT, DOC_ORDER_UNIT_PRICE, DOC_ORDER_PRICE
FROM "DOC_ORDER"
WHERE APPROVAL_NO=148;


SELECT APPROVAL_DOC_TITLE, APPROVAL_CONTENT, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE,
	TO_CHAR(DOC_HOLIDAY_START, 'YYYY-MM-DD') DOC_HOLIDAY_START, TO_CHAR(DOC_HOLIDAY_END, 'YYYY-MM-DD') DOC_HOLIDAY_END,
	APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
FROM "APPROVAL"
LEFT JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
LEFT JOIN "DOC_HOLIDAY" USING(APPROVAL_NO)
WHERE APPROVAL_NO=66;



DELETE FROM "DOC_ORDER"
WHERE APPROVAL_NO=148;

UPDATE "APPROVAL"
SET APPROVAL_DATE=SYSDATE, APPROVAL_TITLE='휴가 임시저장테스트 확인중', APPROVAL_CONTENT='테스트', APPROVAL_CONDITION=0, 
	DEPARTMENT_NO =0, DOC_CATEGORY_NO=0, APPROVAL_DOC_TITLE='테스트테스트'
WHERE APPROVAL_NO = 149
AND MEMBER_NO=9;

ROLLBACK;
COMMIT;

SELECT APPROVAL_TITLE, APPROVAL_DOC_TITLE, APPROVAL_NO, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE
FROM "APPROVAL"
WHERE APPROVAL_NO=171;

DELETE FROM "DOC_STORE"
WHERE APPROVAL_NO=190;

DELETE FROM APPROVAL_FILE
WHERE APPROVAL_NO=190;

DELETE FROM APPROVER
WHERE APPROVAL_NO=190;

DELETE FROM "APPROVAL"
WHERE APPROVAL_NO=190;



SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, MEMBER_TEL, MEMBER_PROFILE,
TEAM_NAME, DEPARTMENT_NAME, GRADE_NAME, D.DEPARTMENT_NO
FROM MEMBER M
LEFT JOIN TEAM USING (TEAM_NO)
JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO)
JOIN GRADE USING (GRADE_NO)
WHERE MEMBER_DEL_FL = 'N'
AND D.DEPARTMENT_NO =1;




 SELECT MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_EMAIL, MEMBER_NAME, 
 MEMBER_TEL, MEMBER_PROFILE, MEMBER_AUTHORITY, TEAM_NO, DEPARTMENT_NO, GRADE_NO,TEAM_NO,
 	TO_CHAR(MEMBER_ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') MEMBER_ENROLL_DATE,
 	(SELECT REPLACE(MEMBER_ADDRESS, '^^^', ' ') FROM DUAL) MEMBER_ADDRESS, GRADE_NAME
 FROM "MEMBER"
 JOIN "GRADE" USING(GRADE_NO)
 WHERE MEMBER_DEL_FL = 'N'
 AND MEMBER_NO = 9;

