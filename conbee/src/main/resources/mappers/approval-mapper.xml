<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 연결할 인터페이스의 패키지명.인터페이스명을 작성 -->
<mapper namespace="com.keepers.conbee.approval.model.mapper.ApprovalMapper">


	<!--=============================== 유진 =========================================-->
	
	<!-- 임시저장함 글 개수 조회 -->
	<select id="searchTempSaveCount" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL
		WHERE MEMBER_NO=#{memberNo}
		AND APPROVAL_DELETE=0
		AND APPROVAL_CONDITION=1
	</select>
	
	<!-- 임시저장 문서 삭제 -->
	<update id="deleteTempApproval">
		UPDATE APPROVAL 
		SET APPROVAL_DELETE = 2
		WHERE APPROVAL_NO = #{approvalNo}
		AND MEMBER_NO=#{memberNo}
	</update>
	
	<!-- 임시저장함 조회 -->
	<select id="selectTempSave" resultType="Approval">
		SELECT APPROVAL_NO, DOC_CATEGORY_GROUP, DOC_CATEGORY_SORT, APPROVAL_TITLE, APPROVAL_DATE, DOC_CATEGORY_NO
		FROM "APPROVAL"
		JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
		WHERE APPROVAL_DELETE=0
		AND APPROVAL_CONDITION=1
		AND MEMBER_NO = #{memberNo}
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	
	<!-- 임시저장 데이터 조회 -->
	<select id="selectTempHoliday" resultType="Approval">
		SELECT APPROVAL_TITLE, APPROVAL_DOC_TITLE, APPROVAL_CONTENT, APPROVAL_NO, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE,
			TO_CHAR(DOC_HOLIDAY_START, 'YYYY-MM-DD') DOC_HOLIDAY_START, TO_CHAR(DOC_HOLIDAY_END, 'YYYY-MM-DD') DOC_HOLIDAY_END,
			APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
		FROM "APPROVAL"
		LEFT JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
		LEFT JOIN "DOC_HOLIDAY" USING(APPROVAL_NO)
		WHERE APPROVAL_NO=#{approvalNo}		
	</select>
	
	<select id="selectTempRetirement" resultType="Approval">
		SELECT APPROVAL_TITLE, APPROVAL_DOC_TITLE, APPROVAL_CONTENT, TO_CHAR(DOC_RETIRE_DATE, 'YYYY-MM-DD') DOC_RETIRE_DATE,
			APPROVAL_NO, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE,
			APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
		FROM "APPROVAL"
		LEFT JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
		LEFT JOIN "DOC_RETIREMENT" USING(APPROVAL_NO)
		WHERE APPROVAL_NO=#{approvalNo}		
	</select>
	
	<select id="selectTempStore" resultType="Approval">
		SELECT APPROVAL_TITLE, APPROVAL_DOC_TITLE, APPROVAL_CONTENT, DOC_STORE_STATE, STORE_NAME, STORE_NO,
			APPROVAL_NO, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE,
			APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
		FROM "APPROVAL"
		LEFT JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
		LEFT JOIN "DOC_STORE" USING(APPROVAL_NO)
		WHERE APPROVAL_NO=#{approvalNo}		
	</select>
	
	<select id="selectTempExpense" resultType="Approval">
		SELECT APPROVAL_TITLE, APPROVAL_DOC_TITLE, APPROVAL_CONTENT, APPROVAL_NO, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE,
			APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
		FROM "APPROVAL"
		LEFT JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
		WHERE APPROVAL_NO=#{approvalNo}
	</select>
	
	<select id="selectTempOrder" resultType="Approval">
		SELECT APPROVAL_TITLE, APPROVAL_DOC_TITLE, APPROVAL_NO, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE
		FROM "APPROVAL"
		WHERE APPROVAL_NO=#{approvalNo}
	</select>
	
	
	<select id="selectTempOrderList" resultType="Approval">
		SELECT GOODS_NO, DOC_ORDER_GOODS_NAME, DOC_ORDER_AMOUNT, DOC_ORDER_UNIT_PRICE, 
				DOC_ORDER_PRICE, DOC_ORDER_DATE
		FROM "DOC_ORDER"
		WHERE APPROVAL_NO=#{approvalNo}
	</select>
	
	<select id="selectTempApprover" resultType="Approver">
		SELECT AR.MEMBER_NO,
				(SELECT MEMBER_NAME FROM MEMBER M WHERE AR.MEMBER_NO = M.MEMBER_NO) 
				MEMBER_NAME,
				(SELECT GRADE_NAME FROM MEMBER M JOIN GRADE USING(GRADE_NO)
				WHERE AR.MEMBER_NO = M.MEMBER_NO) GRADE_NAME,
				(SELECT TEAM_NAME FROM MEMBER M JOIN TEAM USING(TEAM_NO)
				WHERE AR.MEMBER_NO = M.MEMBER_NO) TEAM_NAME,
				(SELECT DEPARTMENT_NAME FROM MEMBER M JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO)
				WHERE AR.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME
		FROM APPROVER AR
		WHERE AR.APPROVAL_NO=#{approvalNo}
		ORDER BY APPROVER_ORDER
	</select>
	
	
	<!-- 재작성 - 기안문 update -->
	<update id="updateApproval">
		UPDATE "APPROVAL"
		SET APPROVAL_DATE=SYSDATE, APPROVAL_TITLE=#{approvalTitle}, APPROVAL_CONTENT=#{approvalContent}, APPROVAL_CONDITION=#{approvalCondition}, 
			DEPARTMENT_NO =#{departmentNo}, DOC_CATEGORY_NO=#{docCategoryNo}, APPROVAL_DOC_TITLE=#{approvalDocTitle}
		WHERE APPROVAL_NO = #{approvalNo}
		AND MEMBER_NO=#{memberNo}
	</update>
	
	<!-- 파일 검색 -->
	<select id="selectSearchFile" resultType="_int">
		SELECT COUNT(*)
		FROM "APPROVAL_FILE"
		WHERE APPROVAL_NO=#{approvalNo}
	</select>
	
	<!-- 파일 정보 삭제 -->
	<delete id="deleteLastFile">
		DELETE FROM "APPROVAL_FILE"
		WHERE APPROVAL_NO=#{approvalNo}
	</delete>
	
	<!-- doc 업데이트 -->
	<update id="updateApprovalDoc">
		<choose>
			<!-- 휴가 -->
			<when test="docCategoryNo==0">
				UPDATE "DOC_HOLIDAY"
				SET DOC_HOLIDAY_START=#{docHolidayStart},
					DOC_HOLIDAY_END=#{docHolidayEnd}
				WHERE APPROVAL_NO=#{approvalNo}
			</when>
			<!-- 퇴직 -->
			<when test="docCategoryNo==1">
				UPDATE "DOC_RETIREMENT"
				SET DOC_RETIRE_DATE=#{docRetireDate}
				WHERE APPROVAL_NO=#{approvalNo}
			</when>
			<!-- 춢폐점-->
			<when test="docCategoryNo==2 or docCategoryNo==3 or docCategoryNo==6">
				UPDATE "DOC_STORE"
				SET DOC_STORE_STATE = #{docStoreState},
					STORE_NAME=#{storeName},
					STORE_NO= CASE
								WHEN ${storeNo}=-1 THEN NULL
								ELSE ${storeNo}
							END
				WHERE APPROVAL_NO=#{approvalNo}
			</when>
			<!-- 지출은 doc 없음-->
			<!-- 발주는 별도-->
		</choose>
	</update>
	
	
	<!-- 발주 리스트 확인 -->
	<select id="searchOrderList" resultType="_int">
		SELECT COUNT(*)
		FROM "DOC_ORDER"
		WHERE APPROVAL_NO=#{approvalNo}
	</select>
	
	<!-- 발주 리스트 삭제 -->
	<delete id="deleteLastOrderList">
		DELETE FROM "DOC_ORDER"
		WHERE APPROVAL_NO=#{approvalNo}
	</delete>
	
	<!-- 결재자 리스트 확인 -->
	<select id="searchApproverList" resultType="_int">
		SELECT COUNT(*)
		FROM "APPROVER"
		WHERE APPROVAL_NO=#{approvalNo}
	</select>
	
	<!-- 결재자 리스트 삭제 -->
	<delete id="deleteLastApproverList">
		DELETE FROM "APPROVER"
		WHERE APPROVAL_NO=#{approvalNo}
	</delete>
	

	<!-- 기안문 작성자 정보 조회 -->
	<select id="selectInfo" resultType="Member">
		SELECT TEAM_NAME, MEMBER_NAME, DEPARTMENT_NAME
		FROM "MEMBER"
		LEFT JOIN "TEAM" USING(TEAM_NO)
		JOIN "DEPARTMENT" ON(MEMBER.DEPARTMENT_NO=DEPARTMENT.DEPARTMENT_NO)
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 부서 모든 멤버 조회 -->
	<select id="selectAllMember" resultType="Member">
		SELECT MEMBER_NO, MEMBER_NAME, GRADE_NAME, TEAM_NAME, TEAM_NO FROM "MEMBER"
		JOIN "GRADE" USING(GRADE_NO)
		LEFT JOIN "TEAM" USING(TEAM_NO)
		WHERE MEMBER.DEPARTMENT_NO = #{selectDepartment}
		ORDER BY GRADE_NO
	</select>
	
	<!-- 팀 멤버 조회 -->
	<select id="selectTeamMember" resultType="Member">
		SELECT MEMBER_NO,MEMBER_NAME, GRADE_NAME, TEAM_NAME, TEAM_NO FROM "MEMBER"
		JOIN "GRADE" USING(GRADE_NO)
		LEFT JOIN "TEAM" USING(TEAM_NO)
		WHERE TEAM_NO = #{selectTeam}
		ORDER BY GRADE_NO
	</select>
	
	<!-- 멤버 정보 조회 -->
	<select id="selectMember" resultType="Member">
		SELECT MEMBER_NO, MEMBER_NAME, GRADE_NAME, TEAM_NAME, DEPARTMENT_NAME
		FROM "MEMBER"
		JOIN "GRADE" USING(GRADE_NO)
		LEFT JOIN "TEAM" USING(TEAM_NO)
		JOIN "DEPARTMENT" ON(MEMBER.DEPARTMENT_NO=DEPARTMENT.DEPARTMENT_NO)
		WHERE MEMBER_NO = #{mebmerNo}
	</select>
	

	<!-- 기안문 insert -->
	<insert id="insertApproval" parameterType="Approval" useGeneratedKeys="true">

		<selectKey order="BEFORE" resultType="_int" keyProperty="approvalNo">
		  SELECT SEQ_APPROVAL_NO.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO "APPROVAL"
		VALUES(#{approvalNo}, SYSDATE, #{approvalTitle}, #{approvalContent}, #{approvalCondition}, 
		DEFAULT, DEFAULT, #{memberNo},#{departmentNo},#{docCategoryNo},#{approvalDocTitle})

	</insert> 
	
	
	<!-- 기안문 파일 insert -->
	<insert id="insertApprovalFile">
		
		<selectKey order="BEFORE" resultType="_int" keyProperty="approvalFileNo">
		  SELECT SEQ_APPROVAL_FILE_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO "APPROVAL_FILE"
		VALUES (#{approvalFileNo}, #{approvalNo}, #{approvalFileRoute}, #{approvalFileOriginName}, #{approvalFileRename})
		
	</insert>
	
	
	<!-- 기안문 doc insert -->
	<insert id="insertApprovalDoc">
		<choose>
			<!-- 휴가 -->
			<when test="docCategoryNo==0">
				INSERT INTO "DOC_HOLIDAY"
				VALUES(#{approvalNo}, #{docHolidayStart}, #{docHolidayEnd})
			</when>
			<!-- 퇴직 -->
			<when test="docCategoryNo==1">
				INSERT INTO "DOC_RETIREMENT"
				VALUES(#{approvalNo}, #{docRetireDate})
			</when>
			<!-- 출폐점 -->
			<when test="docCategoryNo==2 or docCategoryNo==3 or docCategoryNo==6">
				INSERT INTO "DOC_STORE"
				VALUES(#{approvalNo}, #{docStoreState}, #{storeName},
				CASE
					WHEN ${storeNo}=-1 THEN NULL
					ELSE ${storeNo}
				END)
			</when>
			<!-- 지출은 doc 없음-->
		</choose>
	</insert>
	
	<!-- 결재자 리스트 insert -->
	<insert id="insertApproverList" parameterType="list">
		INSERT INTO "APPROVER"
		<foreach collection="list" item="approver" separator=" UNION ">
			SELECT NEXT_APPROVER_NO(), 
				#{approver.approverOrder},
				#{approver.approverCondition},
				SYSDATE,
				#{approver.approvalNo},
				#{approver.memberNo}
			FROM DUAL
		</foreach>
	</insert>
	
	
	<!-- 결재요청함 게시글 개수 -->
	<select id="searchRequestApprovalCount" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL
		WHERE MEMBER_NO=#{memberNo}
		AND APPROVAL_DELETE=0
		AND APPROVAL_CONDITION=0
	</select>
	
	<!-- 결재요청함 -->
	<select id="selectRequestApproval" resultType="Approval">
		SELECT APPROVAL_NO, APPROVAL_TITLE, APPROVAL_DATE, MEMBER_NAME , 
		DOC_CATEGORY_NO, DOC_CATEGORY_GROUP , DOC_CATEGORY_SORT, T.TEAM_NAME, D.DEPARTMENT_NAME,
		
		(SELECT MEMBER_NAME
		FROM (SELECT MEMBER_NAME
		FROM APPROVER
		JOIN MEMBER USING (MEMBER_NO)
		WHERE APPROVAL_NO = A.APPROVAL_NO
		ORDER BY APPROVER_ORDER DESC)
		WHERE ROWNUM = 1) FINAL_APPROVER_NAME
		
		FROM APPROVAL A
		JOIN MEMBER M ON (M.MEMBER_NO = A.MEMBER_NO)
		JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
		LEFT JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		LEFT JOIN DEPARTMENT D ON (M.DEPARTMENT_NO = D.DEPARTMENT_NO)
		WHERE A.MEMBER_NO = #{memberNo}
		AND APPROVAL_DELETE = 0
		AND APPROVAL_CONDITION =0
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	
	<!-- 결재요청함 데이터 조회 -->
	<select id="selectRequestHoliday" resultType="Approval">
		SELECT APPROVAL_DOC_TITLE, APPROVAL_CONTENT, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE,
			TO_CHAR(DOC_HOLIDAY_START, 'YYYY-MM-DD') DOC_HOLIDAY_START, TO_CHAR(DOC_HOLIDAY_END, 'YYYY-MM-DD') DOC_HOLIDAY_END,
			APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
		FROM "APPROVAL"
		LEFT JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
		LEFT JOIN "DOC_HOLIDAY" USING(APPROVAL_NO)
		WHERE APPROVAL_NO=#{approvalNo}
	</select>
	
	
	<select id="selectRequestRetirement" resultType="Approval">
		SELECT APPROVAL_DOC_TITLE, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE,
			 APPROVAL_CONTENT, TO_CHAR(DOC_RETIRE_DATE, 'YYYY-MM-DD') DOC_RETIRE_DATE,
			APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
		FROM "APPROVAL"
		LEFT JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
		JOIN "DOC_RETIREMENT" USING(APPROVAL_NO)
		WHERE APPROVAL_NO=#{approvalNo}		
	</select>
	
	
	<select id="selectRequestStore" resultType="Approval">
		SELECT  APPROVAL_DOC_TITLE, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE,
			 APPROVAL_CONTENT, DOC_STORE_STATE, STORE_NAME, STORE_NO,
			APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
		FROM "APPROVAL"
		LEFT JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
		LEFT JOIN "DOC_STORE" USING(APPROVAL_NO)
		WHERE APPROVAL_NO=#{approvalNo}			
	</select>
	
	
	<select id="selectRequestExpense" resultType="Approval">
		SELECT APPROVAL_DOC_TITLE, APPROVAL_CONTENT, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE,
			APPROVAL_FILE_NO, APPROVAL_FILE_ROUTE, APPROVAL_FILE_ORIGIN_NAME, APPROVAL_FILE_RENAME
		FROM "APPROVAL"
		JOIN "APPROVAL_FILE" USING(APPROVAL_NO)
		WHERE APPROVAL_NO=#{approvalNo}		
	</select>
	
	
	<select id="selectRequestOrder" resultType="Approval">
		SELECT APPROVAL_DOC_TITLE, TO_CHAR(APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE
		FROM "APPROVAL"
		WHERE APPROVAL_NO=#{approvalNo}
	</select>
	
	<select id="selectRequestOrderList" resultType="Approval">
		SELECT GOODS_NO, DOC_ORDER_DATE, DOC_ORDER_GOODS_NAME, DOC_ORDER_AMOUNT, 
				DOC_ORDER_UNIT_PRICE, DOC_ORDER_PRICE
		FROM "DOC_ORDER"
		WHERE APPROVAL_NO=#{approvalNo}
		
	</select>
	
	<select id="selectRequestApprover" resultType="Approver">
		SELECT AR.MEMBER_NO, TO_CHAR(AR.APPROVER_DATE, 'YYYY-MM-DD') APPROVER_DATE, AR.APPROVER_ORDER, AR.APPROVER_CONDITION,
				(SELECT MEMBER_NAME FROM MEMBER M WHERE AR.MEMBER_NO = M.MEMBER_NO) 
				MEMBER_NAME,
				(SELECT GRADE_NAME FROM MEMBER M JOIN GRADE USING(GRADE_NO)
				WHERE AR.MEMBER_NO = M.MEMBER_NO) GRADE_NAME,
				(SELECT TEAM_NAME FROM MEMBER M JOIN TEAM USING(TEAM_NO)
				WHERE AR.MEMBER_NO = M.MEMBER_NO) TEAM_NAME,
				(SELECT DEPARTMENT_NAME FROM MEMBER M JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO)
				WHERE AR.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME
		FROM APPROVER AR
		WHERE AR.APPROVAL_NO=#{approvalNo}
		ORDER BY APPROVER_ORDER		
	</select>
	

	<!-- 회수문서함 글 개수 조회 -->
	<select id="searchReclaimApprovalCount">
		SELECT COUNT(*)
		FROM APPROVAL
		WHERE MEMBER_NO=#{memberNo}
		AND APPROVAL_DELETE=0
		AND APPROVAL_CONDITION=2
	</select>


	<!-- 회수문서함 조회 -->
	<select id="selectReclaimApproval" resultType="Approval">
		SELECT APPROVAL_NO, DOC_CATEGORY_GROUP, DOC_CATEGORY_SORT, APPROVAL_TITLE, APPROVAL_DATE, DOC_CATEGORY_NO
		FROM "APPROVAL"
		JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
		WHERE APPROVAL_DELETE=0
		AND APPROVAL_CONDITION=2
		AND MEMBER_NO = #{memberNo}
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	<!-- 문서 회수하기 -->
	<update id="reclaimApproval">
		UPDATE APPROVAL SET APPROVAL_CONDITION=2, APPROVAL_DATE=SYSDATE
		WHERE MEMBER_NO=${memberNo}
		AND APPROVAL_NO=${approvalNo}
	</update>

	
	
	<!--=============================== 예리나 =========================================-->
	
	<!--결재대기함 조회-->	
	<select id="selectWaitApproval" resultType="Approval">
		SELECT AL.APPROVAL_NO , AL.APPROVAL_DATE , AL.APPROVAL_TITLE , AL.DOC_CATEGORY_NO,
		D.DOC_CATEGORY_GROUP , D.DOC_CATEGORY_SORT,
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		
		(SELECT TEAM_NAME FROM MEMBER M
		JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME , <!--기안자 팀명-->
		
		(SELECT DEPARTMENT_NAME FROM MEMBER M
		JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,  <!--기안자 부서명-->
		
		(SELECT MEMBER_NAME
		FROM (SELECT MEMBER_NAME
		FROM APPROVER
		JOIN MEMBER USING (MEMBER_NO)
		WHERE APPROVAL_NO = AL.APPROVAL_NO
		ORDER BY APPROVER_ORDER DESC)
		WHERE ROWNUM = 1) FINAL_APPROVER_NAME <!--최종결재자 이름-->
		
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		WHERE AR.MEMBER_NO = ${memberNo} <!--상급자(로그인멤버)의 회원번호-->
		AND APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION = 0 <!--결재중인 문서-->
		AND AR.APPROVER_CONDITION = 0 <!--상급자(로그인멤버)가 미승인한 문서-->
		AND AR.MEMBER_NO = (SELECT MEMBER_NO FROM ( <!-- 로그인멤버의 결재차례인 문서 -->
		SELECT *
		FROM APPROVER AR
		WHERE AR.APPROVER_CONDITION = 0
		AND AR.APPROVAL_NO = AL.APPROVAL_NO
		ORDER BY AR.APPROVER_ORDER)
		WHERE ROWNUM =1)
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	
	
	<!--결재진행함 조회-->
	<select id="selectProgressApproval" resultType="Approval">
		SELECT AL.APPROVAL_NO , AL.APPROVAL_DATE , AL.APPROVAL_TITLE , AL.DOC_CATEGORY_NO,
		D.DOC_CATEGORY_GROUP , D.DOC_CATEGORY_SORT,
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		
		(SELECT TEAM_NAME FROM MEMBER M
		JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME , <!--기안자 팀명-->
		
		(SELECT DEPARTMENT_NAME FROM MEMBER M
		JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,  <!--기안자 부서명-->
		
		(SELECT MEMBER_NAME
		FROM (SELECT MEMBER_NAME
		FROM APPROVER
		JOIN MEMBER USING (MEMBER_NO)
		WHERE APPROVAL_NO = AL.APPROVAL_NO
		ORDER BY APPROVER_ORDER DESC)
		WHERE ROWNUM = 1) FINAL_APPROVER_NAME <!--최종결재자 이름-->
		
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		WHERE AR.MEMBER_NO = ${memberNo} <!--상급자(로그인멤버)의 회원번호-->
		AND APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION = 0 <!--결재중인 문서-->
		AND AR.APPROVER_CONDITION = 1 <!--상급자(로그인멤버)가 승인한 문서-->
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	
	<!-- 완료문서함 :: 결재승인권한자가 조회하는 완료문서-->
	<select id="selectCompleteApprovalApprover" resultType="Approval">
		SELECT AL.APPROVAL_NO , AL.APPROVAL_DATE , AL.APPROVAL_TITLE , AL.DOC_CATEGORY_NO,
		D.DOC_CATEGORY_GROUP , D.DOC_CATEGORY_SORT, 
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		(SELECT TEAM_NAME FROM MEMBER M
		JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME ,
		
		(SELECT DEPARTMENT_NAME FROM MEMBER M
		JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,
		(SELECT MEMBER_NAME
		FROM (SELECT MEMBER_NAME
		FROM APPROVER
		JOIN MEMBER USING (MEMBER_NO)
		WHERE APPROVAL_NO = AL.APPROVAL_NO
		ORDER BY APPROVER_ORDER DESC)
		WHERE ROWNUM = 1) FINAL_APPROVER_NAME <!--최종결재자 이름-->
		
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		JOIN MEMBER M ON (M.MEMBER_NO = AL.MEMBER_NO)
		WHERE AR.MEMBER_NO = ${memberNo} <!--상급자(로그인멤버)의 회원번호-->
		AND APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION = 4 <!--결재완료된 문서-->
		AND AR.APPROVER_CONDITION = 1 <!--상급자(로그인멤버)가 승인한 문서-->
		ORDER BY APPROVAL_DATE DESC
	</select>	
	
	
	<!-- 완료문서함 :: 기안자가 조회하는 완료문서-->
	<select id="selectCompleteApprovalDrafter" resultType="Approval">
		SELECT APPROVAL_NO, APPROVAL_TITLE, APPROVAL_DATE, MEMBER_NAME , DOC_CATEGORY_NO, DOC_CATEGORY_GROUP , DOC_CATEGORY_SORT, T.TEAM_NAME, D.DEPARTMENT_NAME,

		(SELECT MEMBER_NAME
		FROM (SELECT MEMBER_NAME
		FROM APPROVER
		JOIN MEMBER USING (MEMBER_NO)
		WHERE APPROVAL_NO = A.APPROVAL_NO
		ORDER BY APPROVER_ORDER DESC)
		WHERE ROWNUM = 1) FINAL_APPROVER_NAME <!--최종결재자 이름-->

		FROM APPROVAL A
		JOIN MEMBER M ON (M.MEMBER_NO = A.MEMBER_NO)
		JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
		LEFT JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		LEFT JOIN DEPARTMENT D ON (M.DEPARTMENT_NO = D.DEPARTMENT_NO)
		WHERE A.MEMBER_NO = ${memberNo}
		AND APPROVAL_CONDITION =4
		AND APPROVAL_DELETE = 0
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	
	<!-- 반려문서함 :: 결재승인권한자가 조회하는 반려문서-->
	<select id="selectReturnApprovalApprover" resultType="Approval">
		SELECT AL.APPROVAL_NO , AL.APPROVAL_DATE , AL.APPROVAL_TITLE , AL.DOC_CATEGORY_NO,
		D.DOC_CATEGORY_GROUP , D.DOC_CATEGORY_SORT, 
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		(SELECT TEAM_NAME FROM MEMBER M
		JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME ,
		
		(SELECT DEPARTMENT_NAME FROM MEMBER M
		JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,
		(SELECT MEMBER_NAME
		FROM (SELECT MEMBER_NAME
		FROM APPROVER
		JOIN MEMBER USING (MEMBER_NO)
		WHERE APPROVAL_NO = AL.APPROVAL_NO
		ORDER BY APPROVER_ORDER DESC)
		WHERE ROWNUM = 1) FINAL_APPROVER_NAME <!--최종결재자 이름-->
		
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		JOIN MEMBER M ON (M.MEMBER_NO = AL.MEMBER_NO)
		WHERE AR.MEMBER_NO = ${memberNo} <!--상급자(로그인멤버)의 회원번호-->
		AND APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION = 3 <!--반려된 문서-->
		AND AR.APPROVER_CONDITION = 2 <!--상급자(로그인멤버)가 반려한 문서-->
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	
	
	<!-- 반려문서함 :: 기안자가 조회하는 반려문서-->
	<select id="selectReturnApprovalDrafter" resultType="Approval">
		SELECT APPROVAL_NO, APPROVAL_TITLE, APPROVAL_DATE, DOC_CATEGORY_NO, MEMBER_NAME ,DOC_CATEGORY_GROUP , DOC_CATEGORY_SORT, T.TEAM_NAME, D.DEPARTMENT_NAME,

		(SELECT MEMBER_NAME
		FROM (SELECT MEMBER_NAME
		FROM APPROVER
		JOIN MEMBER USING (MEMBER_NO)
		WHERE APPROVAL_NO = A.APPROVAL_NO
		ORDER BY APPROVER_ORDER DESC)
		WHERE ROWNUM = 1) FINAL_APPROVER_NAME <!--최종결재자 이름-->

		FROM APPROVAL A
		JOIN MEMBER M ON (M.MEMBER_NO = A.MEMBER_NO)
		JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
		LEFT JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		LEFT JOIN DEPARTMENT D ON (M.DEPARTMENT_NO = D.DEPARTMENT_NO)
		WHERE A.MEMBER_NO = ${memberNo}
		AND APPROVAL_CONDITION =3
		AND APPROVAL_DELETE = 0
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	
	<!--협조문서함 조회-->
	<select id="selectJoinApprovalList" resultType="Approval">
		SELECT DISTINCT AL.APPROVAL_NO , AL.APPROVAL_DATE , AL.APPROVAL_TITLE , AL.DOC_CATEGORY_NO, DECODE(APPROVAL_CONDITION, 0, '결재중', 4, '결재완료') APPROVAL_CONDITION_TITLE,
		D.DOC_CATEGORY_GROUP , D.DOC_CATEGORY_SORT, 
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		(SELECT TEAM_NAME FROM MEMBER M
		JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME ,
		(SELECT DEPARTMENT_NAME FROM MEMBER M
		JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,
		(SELECT MEMBER_NAME
		FROM (SELECT MEMBER_NAME
		FROM APPROVER
		JOIN MEMBER USING (MEMBER_NO)
		WHERE APPROVAL_NO = AL.APPROVAL_NO
		ORDER BY APPROVER_ORDER DESC)
		WHERE ROWNUM = 1) FINAL_APPROVER_NAME <!--최종결재자 이름-->
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		JOIN MEMBER M ON (M.MEMBER_NO = AL.MEMBER_NO)
		WHERE APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION IN (0, 4)  <!--결재중 또는 결재완료된 문서-->
		AND AL.DEPARTMENT_NO = ${departmentNo}
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	
	<!-- 결재자 목록 상세조회(비동기) -->
	<select id="waitApprover" resultType="Approver">
		SELECT APPROVAL_NO, APPROVER_NO, APPROVER_ORDER, APPROVER_CONDITION, TO_CHAR(APPROVER_DATE, 'YYYY-MM-DD') APPROVER_DATE, MEMBER_NAME , MEMBER_NO
		FROM APPROVER
		JOIN "MEMBER" USING (MEMBER_NO)
		WHERE APPROVAL_NO = ${approvalNo}
   </select>
  
	<!-- 발주기안서 품목명 입력시 자동완성 기능 -->
	<select id="docOrderName" resultType="Stock">
		SELECT GOODS_NO, GOODS_NAME, STOCK_IN_PRICE
		FROM STOCK
		JOIN GOODS USING(GOODS_NO)
		WHERE STORE_NO = 0
		AND GOODS_NAME LIKE '%${goodsName}%'
	</select>
	
	<!--결재버튼 클릭 시 승인-->
	<update id="approve">
		UPDATE APPROVER SET 
		APPROVER_CONDITION = 1
		, APPROVER_DATE = SYSDATE
		WHERE MEMBER_NO = ${memberNo}
		AND APPROVAL_NO = ${approvalNo}		
	</update>
	
	<!--결재문서가 모두 승인이 났는지 확인 후 문서상태 변경-->
	<update id="approveAllCheck">
		UPDATE APPROVAL SET
		APPROVAL_CONDITION = 4
		WHERE APPROVAL_NO = ${approvalNo}	
		AND 0 = (SELECT COUNT(*) 
				FROM APPROVER
				WHERE APPROVAL_NO = ${approvalNo}	
				AND APPROVER_CONDITION = 0)		
	</update>	
	
	<!--폐점 최종승인 확인 후 폐쇄하기-->
	<update id="storeRunCheck">
		UPDATE STORE SET
		STORE_RUN_APPROVAL = 'Y'
		WHERE STORE_NO = (SELECT STORE_NO
						FROM DOC_STORE
						WHERE APPROVAL_NO = ${approvalNo})
		AND 3 = (SELECT DOC_CATEGORY_NO
				FROM APPROVAL
				WHERE APPROVAL_NO = ${approvalNo})
	</update>
	
	<!--사직서가 결재완료된 경우 회원 탈퇴승인 처리하기-->
	<update id="memberDelCheck">
		UPDATE MEMBER SET
		MEMBER_DEL_APPROVAL = 'Y'
		WHERE MEMBER_NO = (SELECT MEMBER_NO
							FROM "MEMBER"
							JOIN APPROVAL USING (MEMBER_NO)
							WHERE APPROVAL_NO = ${approvalNo})
		AND 1 = (SELECT DOC_CATEGORY_NO
				FROM APPROVAL
				WHERE APPROVAL_NO = ${approvalNo})
	</update>
	
	
	<!--반려 버튼 클릭 시 반려-->
	<update id="returnApprove">
		UPDATE APPROVER SET 
		APPROVER_CONDITION = 2
		WHERE MEMBER_NO = ${memberNo}
		AND APPROVAL_NO = ${approvalNo}		
	</update>
	
	<!--반려사유 업데이트-->
	<update id="returnApproveReason">
		UPDATE APPROVAL SET 
		APPROVAL_RETURN_COMMENT = #{returnReason}
		WHERE APPROVAL_NO = ${approvalNo}		
	</update>
	
	<!--기안서 반려상태로 업데이트-->
	<update id="returnApproveCondition">
		UPDATE APPROVAL SET 
		APPROVAL_CONDITION = 3
		WHERE APPROVAL_NO = ${approvalNo}
	</update>
	
	<!--반려사유 조회-->
	<select id="selectReturnReason">
		SELECT APPROVAL_RETURN_COMMENT 
		FROM APPROVAL
		WHERE APPROVAL_NO = ${approvalNo}
	</select>
	
	
	
	<!--기안서 상세조회(휴가)-->
	<select id="selectHolidayApproval" resultType="Approval">
		SELECT TO_CHAR(AL.APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE , AL.APPROVAL_NO, AL.APPROVAL_TITLE , AL.APPROVAL_CONTENT , DECODE(AL.DEPARTMENT_NO, 1, '인사관리부', 2, '경영관리부', 3, '운영관리부', 4, '고객관리부', 0, '임원부') DEPARTMENT_TITLE,
		AF.APPROVAL_FILE_ROUTE , AF.APPROVAL_FILE_ORIGIN_NAME , AF.APPROVAL_FILE_RENAME ,
		DECODE(AL.DOC_CATEGORY_NO, 0, '복무(휴가)', 1, '인사(퇴직)', 2, '업무(출점)', 3, '업무(폐점)', 4, '업무(지출)', 5, '업무(발주)') DOC_CATEGORY_TITLE, AL.DOC_CATEGORY_NO,
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		(SELECT MEMBER_NO FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NO, <!--기안자의 회원번호-->
		(SELECT TEAM_NAME FROM MEMBER M JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME,
		(SELECT DEPARTMENT_NAME FROM MEMBER M JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,
		(SELECT COUNT(*) FROM APPROVER AR WHERE AR.APPROVAL_NO = AL.APPROVAL_NO) APPROVER_COUNT, <!--결재자수-->
		TO_CHAR(DH.DOC_HOLIDAY_START, 'YYYY-MM-DD')DOC_HOLIDAY_START, TO_CHAR(DH.DOC_HOLIDAY_END, 'YYYY-MM-DD')DOC_HOLIDAY_END
		FROM APPROVAL AL
		JOIN DOC_HOLIDAY DH ON (AL.APPROVAL_NO=DH.APPROVAL_NO)
		LEFT JOIN APPROVAL_FILE AF ON (AL.APPROVAL_NO=AF.APPROVAL_NO)
		WHERE AL.APPROVAL_NO = ${approvalNo}
		
	</select>
	
	<!--기안서 상세조회(퇴직)-->
	<select id="selectRetirementApproval" resultType="Approval">
		SELECT TO_CHAR(AL.APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE , AL.APPROVAL_NO , AL.APPROVAL_TITLE , AL.APPROVAL_CONTENT , DECODE(AL.DEPARTMENT_NO, 1, '인사관리부', 2, '경영관리부', 3, '운영관리부', 4, '고객관리부', 0, '임원부') DEPARTMENT_TITLE,
		AF.APPROVAL_FILE_ROUTE , AF.APPROVAL_FILE_ORIGIN_NAME , AF.APPROVAL_FILE_RENAME ,
		DECODE(AL.DOC_CATEGORY_NO, 0, '복무(휴가)', 1, '인사(퇴직)', 2, '업무(출점)', 3, '업무(폐점)', 4, '업무(지출)', 5, '업무(발주)') DOC_CATEGORY_TITLE, AL.DOC_CATEGORY_NO,
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		(SELECT MEMBER_NO FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NO, <!--기안자의 회원번호-->
		(SELECT TEAM_NAME FROM MEMBER M JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME,
		(SELECT DEPARTMENT_NAME FROM MEMBER M JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,
		(SELECT COUNT(*) FROM APPROVER AR WHERE AR.APPROVAL_NO = AL.APPROVAL_NO) APPROVER_COUNT, <!--결재자수-->
		TO_CHAR(DR.DOC_RETIRE_DATE, 'YYYY-MM-DD')DOC_RETIRE_DATE 
		FROM APPROVAL AL
		JOIN DOC_RETIREMENT DR ON (AL.APPROVAL_NO=DR.APPROVAL_NO)
		LEFT JOIN APPROVAL_FILE AF ON (AL.APPROVAL_NO=AF.APPROVAL_NO)
		WHERE AL.APPROVAL_NO = ${approvalNo}
	</select>
	
	<!--기안서 상세조회(지출)-->
	<select id="selectExpenseApproval" resultType="Approval">
		SELECT TO_CHAR(AL.APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE , AL.APPROVAL_NO , AL.APPROVAL_TITLE , AL.APPROVAL_CONTENT , DECODE(AL.DEPARTMENT_NO, 1, '인사관리부', 2, '경영관리부', 3, '운영관리부', 4, '고객관리부', 0, '임원부') DEPARTMENT_TITLE,
		AF.APPROVAL_FILE_ROUTE , AF.APPROVAL_FILE_ORIGIN_NAME , AF.APPROVAL_FILE_RENAME ,
		DECODE(AL.DOC_CATEGORY_NO, 0, '복무(휴가)', 1, '인사(퇴직)', 2, '업무(출점)', 3, '업무(폐점)', 4, '업무(지출)', 5, '업무(발주)') DOC_CATEGORY_TITLE, AL.DOC_CATEGORY_NO,
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		(SELECT MEMBER_NO FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NO, <!--기안자의 회원번호-->
		(SELECT TEAM_NAME FROM MEMBER M JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME,
		(SELECT DEPARTMENT_NAME FROM MEMBER M JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,
		(SELECT COUNT(*) FROM APPROVER AR WHERE AR.APPROVAL_NO = AL.APPROVAL_NO) APPROVER_COUNT <!--결재자수-->
		FROM APPROVAL AL
		LEFT JOIN APPROVAL_FILE AF ON (AL.APPROVAL_NO=AF.APPROVAL_NO)
		WHERE AL.APPROVAL_NO = ${approvalNo}
	</select>
	
	<!--기안서 상세조회(출점)-->
	<select id="selectOpenStoreApproval" resultType="Approval">
		SELECT TO_CHAR(AL.APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE , AL.APPROVAL_NO , AL.APPROVAL_TITLE , AL.APPROVAL_CONTENT , DECODE(AL.DEPARTMENT_NO, 1, '인사관리부', 2, '경영관리부', 3, '운영관리부', 4, '고객관리부', 0, '임원부') DEPARTMENT_TITLE,
		AF.APPROVAL_FILE_ROUTE , AF.APPROVAL_FILE_ORIGIN_NAME , AF.APPROVAL_FILE_RENAME ,
		DECODE(AL.DOC_CATEGORY_NO, 0, '복무(휴가)', 1, '인사(퇴직)', 2, '업무(출점)', 3, '업무(폐점)', 4, '업무(지출)', 5, '업무(발주)') DOC_CATEGORY_TITLE, AL.DOC_CATEGORY_NO,
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		(SELECT MEMBER_NO FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NO, <!--기안자의 회원번호-->
		(SELECT TEAM_NAME FROM MEMBER M JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME,
		(SELECT DEPARTMENT_NAME FROM MEMBER M JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,
		(SELECT COUNT(*) FROM APPROVER AR WHERE AR.APPROVAL_NO = AL.APPROVAL_NO) APPROVER_COUNT, <!--결재자수-->
		DS.STORE_NAME 
		FROM APPROVAL AL
		JOIN DOC_STORE DS ON (AL.APPROVAL_NO=DS.APPROVAL_NO)
		LEFT JOIN APPROVAL_FILE AF ON (AL.APPROVAL_NO=AF.APPROVAL_NO)
		WHERE AL.APPROVAL_NO = ${approvalNo}
		AND DS.DOC_STORE_STATE = 0
	</select>
	
	
	<!--기안서 상세조회(폐점)-->
	<select id="selectCloseStoreApproval" resultType="Approval">
		SELECT TO_CHAR(AL.APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE , AL.APPROVAL_NO , AL.APPROVAL_TITLE , AL.APPROVAL_CONTENT , DECODE(AL.DEPARTMENT_NO, 1, '인사관리부', 2, '경영관리부', 3, '운영관리부', 4, '고객관리부', 0, '임원부') DEPARTMENT_TITLE,
		AF.APPROVAL_FILE_ROUTE , AF.APPROVAL_FILE_ORIGIN_NAME , AF.APPROVAL_FILE_RENAME ,
		DECODE(AL.DOC_CATEGORY_NO, 0, '복무(휴가)', 1, '인사(퇴직)', 2, '업무(출점)', 3, '업무(폐점)', 4, '업무(지출)', 5, '업무(발주)') DOC_CATEGORY_TITLE, AL.DOC_CATEGORY_NO,
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		(SELECT MEMBER_NO FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NO, <!--기안자의 회원번호-->
		(SELECT TEAM_NAME FROM MEMBER M JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME,
		(SELECT DEPARTMENT_NAME FROM MEMBER M JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,
		(SELECT COUNT(*) FROM APPROVER AR WHERE AR.APPROVAL_NO = AL.APPROVAL_NO) APPROVER_COUNT, <!--결재자수-->
		DS.STORE_NAME , DS.STORE_NO 
		FROM APPROVAL AL
		JOIN DOC_STORE DS ON (AL.APPROVAL_NO=DS.APPROVAL_NO)
		LEFT JOIN APPROVAL_FILE AF ON (AL.APPROVAL_NO=AF.APPROVAL_NO)
		WHERE AL.APPROVAL_NO = ${approvalNo}
		AND DS.DOC_STORE_STATE = 1
	</select>
	

 	<!--기안서 상세조회(발주)-->
	<select id="selectOrderApproval" resultType="Approval">
		SELECT TO_CHAR(AL.APPROVAL_DATE, 'YYYY-MM-DD') APPROVAL_DATE , AL.APPROVAL_NO , AL.APPROVAL_TITLE , AL.APPROVAL_CONTENT , DECODE(AL.DEPARTMENT_NO, 1, '인사관리부', 2, '경영관리부', 3, '운영관리부', 4, '고객관리부', 0, '임원부') DEPARTMENT_TITLE,
		DECODE(AL.DOC_CATEGORY_NO, 0, '복무(휴가)', 1, '인사(퇴직)', 2, '업무(출점)', 3, '업무(폐점)', 4, '업무(지출)', 5, '업무(발주)') DOC_CATEGORY_TITLE, AL.DOC_CATEGORY_NO, 
		(SELECT MEMBER_NAME FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NAME, <!--기안자의 이름-->
		(SELECT MEMBER_NO FROM MEMBER M WHERE AL.MEMBER_NO = M.MEMBER_NO) MEMBER_NO, <!--기안자의 회원번호-->
		(SELECT TEAM_NAME FROM MEMBER M JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) TEAM_NAME,
		(SELECT DEPARTMENT_NAME FROM MEMBER M JOIN DEPARTMENT D ON (D.DEPARTMENT_NO = M.DEPARTMENT_NO) WHERE AL.MEMBER_NO = M.MEMBER_NO) DEPARTMENT_NAME,
		(SELECT COUNT(*) FROM APPROVER AR WHERE AR.APPROVAL_NO = AL.APPROVAL_NO) APPROVER_COUNT, <!--결재자수-->
		
		DO.DOC_ORDER_NO , DO.DOC_ORDER_AMOUNT , DO.DOC_ORDER_UNIT_PRICE , DO.DOC_ORDER_PRICE , DO.GOODS_NO , DO.DOC_ORDER_GOODS_NAME , DO.DOC_ORDER_DATE 
		FROM APPROVAL AL
		JOIN DOC_ORDER DO ON (AL.APPROVAL_NO=DO.APPROVAL_NO)
		WHERE AL.APPROVAL_NO = ${approvalNo}
	</select>
	

	<!--삭제버튼 클릭 시 삭제-->
	<update id="deleteApprove">
		UPDATE APPROVAL SET
		APPROVAL_DELETE = 2
		WHERE APPROVAL_NO = ${approvalNo}
	</update>	
	

	<!-- 발주 주문서 insert -->
	<insert id="insertOrder">
	  INSERT INTO "DOC_ORDER"
	  <foreach collection="list" item="item" separator=" UNION ">
	    SELECT NEXT_DOC_ORDER_NO(), #{item.docOrderAmount}, #{item.docOrderUnitPrice}, #{item.docOrderPrice},
	    #{item.approvalNo},#{item.goodsNo}, #{item.docOrderGoodsName}, #{item.docOrderDate}  FROM DUAL
	  </foreach>	
	</insert>

	
	<!--반려취소(결재자)-->
	<update id="cancleReturn">
		UPDATE APPROVER SET
		APPROVER_CONDITION = 0
		WHERE MEMBER_NO = ${memberNo}
		AND APPROVAL_NO = ${approvalNo}
	</update>
	
	<!--반려취소 후 해당 문서 결재중으로 돌리기-->
	<update id="cancleReturnApp">
	  UPDATE APPROVAL SET
  	  APPROVAL_CONDITION = 0
	  WHERE APPROVAL_NO = ${approvalNo}
	</update>
	
	
	<!-- 기안 후 180일 지난 기안문리스트 불러오기 -->
	<select id="selectDateOverApproval" resultType="Approval">
		SELECT APPROVAL_NO
		FROM APPROVAL
		WHERE SYSDATE - APPROVAL_DATE > 180
		AND APPROVAL_DELETE = 0
	</select>
	
	<!-- 기안서 삭제하기(스케쥴링) -->
	<update id="approvalDeleteScheduling">
		UPDATE APPROVAL SET
		APPROVAL_DELETE = 1
		WHERE APPROVAL_NO = ${approvalNo}
	</update>
	
	<!--결재대기함에 있는 모든 기안서의 갯수 조회-->
	<select id="getWaitApprovalListCount" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		WHERE AR.MEMBER_NO = ${memberNo}
		AND APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION = 0 <!--결재중인 문서-->
		AND AR.APPROVER_CONDITION = 0 <!--상급자(로그인멤버)가 미승인한 문서-->
		AND AR.MEMBER_NO = (SELECT MEMBER_NO FROM ( <!-- 로그인멤버의 결재차례인 문서 -->
		SELECT *
		FROM APPROVER AR
		WHERE AR.APPROVER_CONDITION = 0
		AND AR.APPROVAL_NO = AL.APPROVAL_NO
		ORDER BY AR.APPROVER_ORDER)
		WHERE ROWNUM =1)
	</select>
	
	<!--결재진행함에 있는 모든 기안서의 갯수 조회-->
	<select id="getProgressApprovalListCount" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		WHERE AR.MEMBER_NO = ${memberNo} <!--상급자(로그인멤버)의 회원번호-->
		AND APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION = 0 <!--결재중인 문서-->
		AND AR.APPROVER_CONDITION = 1 <!--상급자(로그인멤버)가 승인한 문서-->
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	<!--결재승인권한자가 조회하는 완료문서 리스트 갯수 조회-->
	<select id="getCompleteApprovalApproverListCount" resultType="_int">
		SELECT COUNT(*)
		
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		JOIN MEMBER M ON (M.MEMBER_NO = AL.MEMBER_NO)
		WHERE AR.MEMBER_NO = ${memberNo} <!--상급자(로그인멤버)의 회원번호-->
		AND APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION = 4 <!--결재완료된 문서-->
		AND AR.APPROVER_CONDITION = 1 <!--상급자(로그인멤버)가 승인한 문서-->
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	<!--기안자가 조회하는 결재완료문서 리스트 갯수 조회-->
	<select id="getCompleteApprovalDrafterListCount" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL A
		JOIN MEMBER M ON (M.MEMBER_NO = A.MEMBER_NO)
		JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
		LEFT JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		LEFT JOIN DEPARTMENT D ON (M.DEPARTMENT_NO = D.DEPARTMENT_NO)
		WHERE A.MEMBER_NO = ${memberNo}
		AND APPROVAL_CONDITION =4
		AND APPROVAL_DELETE = 0
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	<!--자신이 반려한 문서 리스트 갯수 조회-->
	<select id="getReturnApprovalApproverListCount" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		JOIN MEMBER M ON (M.MEMBER_NO = AL.MEMBER_NO)
		WHERE AR.MEMBER_NO = ${memberNo} <!--상급자(로그인멤버)의 회원번호-->
		AND APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION = 3 <!--반려된 문서-->
		AND AR.APPROVER_CONDITION = 2 <!--상급자(로그인멤버)가 반려한 문서-->
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	<!--기안자가 자신이 기안한 문서가 반려된 경우 리스트 갯수 조회-->
	<select id="getReturnApprovalDrafterListCount" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL A
		JOIN MEMBER M ON (M.MEMBER_NO = A.MEMBER_NO)
		JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
		LEFT JOIN TEAM T ON (M.TEAM_NO = T.TEAM_NO)
		LEFT JOIN DEPARTMENT D ON (M.DEPARTMENT_NO = D.DEPARTMENT_NO)
		WHERE A.MEMBER_NO = ${memberNo}
		AND APPROVAL_CONDITION =3
		AND APPROVAL_DELETE = 0
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	<!--협조문서리스트 갯수 조회-->
	<select id="getJoinApprovalListCount" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL AL
		JOIN APPROVER AR ON (AL.APPROVAL_NO = AR.APPROVAL_NO)
		JOIN DOC_CATEGORY D ON (AL.DOC_CATEGORY_NO = D.DOC_CATEGORY_NO)
		JOIN MEMBER M ON (M.MEMBER_NO = AL.MEMBER_NO)
		WHERE APPROVAL_DELETE = 0 <!--삭제되지 않은 문서-->
		AND APPROVAL_CONDITION IN (0, 4)  <!--결재중 또는 결재완료된 문서-->
		AND AL.DEPARTMENT_NO = ${departmentNo}
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	<!--결재완료된 사직서의 회원번호, 퇴직예정일 받아오기-->
	<select id="selectRetireMemberList" resultType="Member">
		SELECT MEMBER_NO 
		FROM APPROVAL
		JOIN DOC_RETIREMENT USING (APPROVAL_NO)
		WHERE APPROVAL_CONDITION = 4
		AND DOC_CATEGORY_NO = 1
		<![CDATA[
		AND DOC_RETIRE_DATE < SYSDATE]]>
	</select>
	
	<!--회원탈퇴(스케쥴링)-->
	<update id="deleteMember">
		UPDATE MEMBER SET
		MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO = ${memberNo}
	</update>
	
	<!--결재완료된 휴가신청서의 휴가 시작일, 종료일, 회원번호 받아오기-->
	<select id="selectHolidayInfo" resultType="Approval">
		SELECT TO_CHAR(DOC_HOLIDAY_START, 'YYYY-MM-DD') DOC_HOLIDAY_START, TO_CHAR(DOC_HOLIDAY_END, 'YYYY-MM-DD')DOC_HOLIDAY_END, MEMBER_NO
		FROM APPROVAL
		JOIN DOC_HOLIDAY USING (APPROVAL_NO)
		WHERE APPROVAL_NO = ${approvalNo}
		AND 0 = (SELECT DOC_CATEGORY_NO
			FROM APPROVAL
			WHERE APPROVAL_NO = ${approvalNo})
	</select>
	
	<!--휴가신청서가 결재완료된 경우 캘린더에 등록하기-->
	<insert id="holidayCalendarInsert">
		INSERT INTO CALENDAR
		VALUES (SEQ_CAL_NO.NEXTVAL, '1', 
				 TO_DATE(#{docHolidayStart}, 'YYYY-MM-DD"T"HH24:MI:SS'),
				 TO_DATE(#{docHolidayEnd}, 'YYYY-MM-DD"T"HH24:MI:SS'),
				'휴가', '휴가', '#f6c90e', #{memberNo})
	</insert>
	

</mapper>

