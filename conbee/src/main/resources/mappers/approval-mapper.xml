<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 연결할 인터페이스의 패키지명.인터페이스명을 작성 -->
<mapper namespace="com.keepers.conbee.approval.model.mapper.ApprovalMapper">


	<!-- 정보조회 합치기,,-->
	<!-- 기안문 작성자 정보 조회 -->
	<select id="selectWriteInfo" resultType="Member">
		SELECT MEMBER_NAME, TEAM_NAME
		FROM "MEMBER"
		JOIN "TEAM" USING(TEAM_NO)
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 결재자 리스트-->
	<!-- 사장부사장/부장/팀장--><!-- 사원 많음 코드 고치기-->
	<select id="selectApproverList" resultType="Member"> 
		SELECT MEMBER_NO, GRADE_NO, TEAM_NO, MEMBER_NAME
		FROM "MEMBER"
		WHERE TEAM_NO=0
		OR (DEPARTMENT_NO =(SELECT DEPARTMENT_NO FROM "MEMBER" WHERE MEMBER_NO=#{memberNo}) AND GRADE_NO=2)
		OR (TEAM_NO = (SELECT TEAM_NO FROM "MEMBER" WHERE MEMBER_NO=#{memberNo}) AND GRADE_NO=3)
		OR (GRADE_NO =3 AND DEPARTMENT_NO =2 AND TEAM_NO = 6)
		AND MEMBER_NO!=#{memberNo}
		ORDER BY GRADE_NO DESC
	</select>
	
	
	<!-- 부서 선택 시 부장 이상 조회 -->
	<select id="selectApprover" resultType="String">
		SELECT MEMBER_NAME FROM "MEMBER"
		JOIN DEPARTMENT USING(DEPARTMENT_NO)
		WHERE DEPARTMENT_NO=#{selectDepartment}
		AND GRADE_NO IN(0,1,2)
	</select>
	
	<!-- 팀 선택 시 결재자 조회 -->
	<select id="selectApprover2" resultType="String">
		SELECT MEMBER_NAME FROM "MEMBER"
		JOIN TEAM USING(TEAM_NO)
		WHERE TEAM_NAME=#{selectTeam}
	</select>
	

	<!-- 기안문 insert -->
	<insert id="insertApproval" parameterType="Approval" useGeneratedKeys="true">

		<selectKey order="BEFORE" resultType="_int" keyProperty="approvalNo">
		  SELECT SEQ_APPROVAL_NO.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO "APPROVAL"
		VALUES(#{approvalNo}, SYSDATE, #{approvalTitle}, #{approvalContent}, #{approvalCondition}, 
		DEFAULT, DEFAULT, #{memberNo},#{departmentNo},#{docCategoryNo},#{approvalDocTitle})

	</insert> 

	<!-- 기안문 doc insert -->
	<insert id="insertApprovalDoc">
		<choose>
			<!-- 휴가 -->
			<when test="docCategoryNo==0">
				INSERT INTO "DOC_HOLIDAY"
				VALUES(#{approvalNo}, #{docHolidayStart}, #{docHolidayEnd})
			</when>
			<!-- 퇴직 -->
			<when test="docCategoryNo==1">
				INSERT INTO "DOC_RETIREMENT"
				VALUES(#{approvalNo}, #{docRetireDate})
			</when>
			<!-- 출폐점 -->
			<when test="docCategoryNo==2 or docCategoryNo==3">
				INSERT INTO "DOC_STORE"
				VALUES(#{approvalNo}, #{docStoreState}, #{storeName})
			</when>
			<!-- 지출은 doc 없음-->
			<!-- 발주 추가예정-->
		</choose>
	</insert>
	
	<!-- 결재자 리스트 insert -->
	<insert id="insertApproverList" parameterType="list">
		INSERT INTO "APPROVER"
		<foreach collection="list" item="item" separator=" UNION ">
			SELECT NEXT_APPROVER_NO(), 
				#{item.approverOrder},
				#{item.approverCondition},
				SYSDATE,
				#{item.approvalNo},
				#{item.memberNo}
			FROM DUAL
		</foreach>
	</insert>
	
	
	<!-- 결재요청함 -->
	<select id="selectRequestApproval" resultType="Approval">
		SELECT APPROVAL_NO, DOC_CATEGORY_GROUP , DOC_CATEGORY_SORT, APPROVAL_TITLE, MEMBER_NAME, APPROVAL_DATE
		FROM APPROVAL
		JOIN DOC_CATEGORY USING(DOC_CATEGORY_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE MEMBER_NO = #{memberNo}
		AND APPROVAL_CONDITION =0
		ORDER BY APPROVAL_DATE DESC
	</select>
	
	
	<!-- 부서 모든 멤버 조회 -->
	<select id="selectAllMember" resultType="Member">
		SELECT MEMBER_NO, MEMBER_NAME, GRADE_NAME FROM "MEMBER"
		JOIN "GRADE" USING(GRADE_NO)
		WHERE DEPARTMENT_NO = #{selectDepartment}
		ORDER BY GRADE_NO
	</select>
	
	<!-- 팀 멤버 조회 -->
	<select id="selectTeamMember" resultType="Member">
		SELECT MEMBER_NO,MEMBER_NAME, GRADE_NAME FROM "MEMBER"
		JOIN "GRADE" USING(GRADE_NO)
		WHERE TEAM_NO = #{selectTeam}
		ORDER BY GRADE_NO
	</select>
	
	<!-- 멤버 정보 조회 -->
	<select id="selectMember" resultType="Member">
		SELECT MEMBER_NO, MEMBER_NAME, GRADE_NAME, TEAM_NAME, DEPARTMENT_NAME
		FROM "MEMBER"
		JOIN "GRADE" USING(GRADE_NO)
		LEFT JOIN "TEAM" USING(TEAM_NO)
		JOIN "DEPARTMENT" ON(MEMBER.DEPARTMENT_NO=DEPARTMENT.DEPARTMENT_NO)
		WHERE MEMBER_NO = #{mebmerNo}
	</select>

</mapper>

